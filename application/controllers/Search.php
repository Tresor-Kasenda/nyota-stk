<?php

defined('BASEPATH') or exit('No direct script access allowed');

class Search extends CI_Controller
{
    protected $value;

    public function __construct()
    {
        parent::__construct();

        //$this->gen->checklogin();

        $this->genlib->ajaxOnly();

        $this->load->model(['transaction', 'item', 'category_model']);

        $this->load->helper('text');

        $this->value = $this->input->get('v', true);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    public function index()
    {
        /**
         * function will call models to do all kinds of search just to check whether there is a match for the searched value
         * in the search criteria or not. This applies only to global search
         */


        //set final output
        $this->output->set_content_type('application/json')->set_output(json_encode($json));
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    public function itemSearch()
    {
        $this->genlib->ajaxOnly();

        $this->load->helper('text');

        //set the sort order
        $orderBy = $this->input->get('orderBy', true) ? $this->input->get('orderBy', true) : "name";
        $orderFormat = $this->input->get('orderFormat', true) ? $this->input->get('orderFormat', true) : "DESC";

        //count the total number of items in db
        $totalItems = $this->db->count_all('items');

        $this->load->library('pagination');

        $pageNumber = $this->uri->segment(
            3,
            0
        );//set page number to zero if the page number is not set in the third segment of uri

        $limit = $this->input->get('limit', true) ? $this->input->get('limit', true) : 10;//show $limit per page
        $start = $pageNumber == 0 ? 0 : ($pageNumber - 1) * $limit;//start from 0 if pageNumber is 0, else start from the next iteration

        //call setPaginationConfig($totalRows, $urlToCall, $limit, $attributes) in genlib to configure pagination
        $config = $this->genlib->setPaginationConfig(
            $totalItems,
            "items/lilt",
            $limit,
            ['onclick' => 'return lilt(this.href);']
        );

        $this->pagination->initialize($config);//initialize the library class

        //get all items from db
        $data['allItems'] = $this->item->itemsearch($this->input->get('v', true), $orderFormat, $start, $limit);
        $data['categories'] = $this->category_model->getAll();
        $data['itemCategories'] = $this->category_model->getAllItemCategories();
        $data['range'] = $totalItems > 0 ? "Afficher " . ($start + 1) . "-" . ($start + count(
                    $data['allItems']
                )) . " sur " . $totalItems : "";
        $data['links'] = $this->pagination->create_links();//page links
        $data['sn'] = $start + 1;
        $data['cum_total'] = $this->item->getItemsCumTotal();
        $data['critic_items'] = $this->item->getCriticItem();

        $json['itemsListTable'] = $this->load->view(
            'items/itemslisttable',
            $data,
            true
        );//get view with populated items table

        $this->output->set_content_type('application/json')->set_output(json_encode($json));
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    public function transSearch()
    {
        $data['allTransactions'] = $this->transaction->transsearch($this->value);
        $data['sn'] = 1;

        $json['transTable'] = $data['allTransactions'] ? $this->load->view(
            'transactions/transtable',
            $data,
            true
        ) : "Aucun résultat trouvé";

        //set final output
        $this->output->set_content_type('application/json')->set_output(json_encode($json));
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function otherSearch()
    {
        //set final output
        $this->output->set_content_type('application/json')->set_output(json_encode($json));
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
}
