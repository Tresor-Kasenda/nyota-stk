<?php
defined('BASEPATH') or exit('');

class Customers_model extends CI_Model
{
    public function __construct()
    {
        parent::__construct();
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /**
     * @param $cust_name
     * @param $cust_tel1
     * @param $cust_tel2
     * @param $cust_email
     * @param $cust_gender
     * @param $cust_adresse
     * @param $cust_trans
     * @return bool
     */
    public function add($cust_name, $cust_tel1, $cust_tel2, $cust_email, $cust_gender, $cust_adresse)
    {
        $data = ['cust_name' => $cust_name, 'cust_tel1' => $cust_tel1, 'cust_tel2' => $cust_tel2, 'cust_email' => $cust_email, 'cust_gender' => $cust_gender, 'cust_adresse' => $cust_adresse];

        //set the datetime based on the db driver in use
        $this->db->platform() == "sqlite3" ? $this->db->set('created_on', "datetime('now')", FALSE) : $this->db->set('created_on', "NOW()", FALSE);

        $this->db->insert('customers', $data);

        if ($this->db->affected_rows() > 0) {
            return $this->db->insert_id();
        } else {
            return FALSE;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /**
     * Get some details about a custommer
     * @param type $id
     * @return boolean
     */
    public function get_admin_info($id)
    {
        $this->db->select('cust_id, cust_name, cust_tel1, cust_tel2,cust_email,cust_gender');
        $this->db->where('cust_id', $id);

        $run_q = $this->db->get('customers');

        if ($run_q->num_rows() > 0) {
            return $run_q->result();
        } else {
            return FALSE;
        }
    }


    /*
     ********************************************************************************************************************************
     ********************************************************************************************************************************
     ********************************************************************************************************************************
     ********************************************************************************************************************************
     ********************************************************************************************************************************
     */

    public function getAll($orderBy = "cust_name", $orderFormat = "ASC", $start = 0, $limit = null)
    {
        $this->db->select('cust_id, cust_name, cust_tel1, cust_tel2,cust_email,cust_gender,cust_adresse, created_on, deleted');
        $this->db->limit($limit, $start);
        $this->db->order_by($orderBy, $orderFormat);

        $run_q = $this->db->get('customers');

        if ($run_q->num_rows() > 0) {
            return $run_q->result();
        } else {
            return FALSE;
        }
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     *
     * @param type $cust_id
     * @param type $new_value
     * @return boolean
     */
    public function delete($cust_id, $new_value)
    {
        $this->db->where('cust_id', $cust_id);
        $this->db->update('customers', ['deleted' => $new_value]);

        if ($this->db->affected_rows()) {
            return TRUE;
        } else {
            return FALSE;
        }
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /**
     *
     * @param type $value
     * @return boolean
     */
    public function customersSearch($value)
    {
        $q = "SELECT * FROM customers WHERE 
                id != {$_SESSION['admin_id']}
                    AND
                (
                MATCH(cust_name) AGAINST(?)
                || MATCH(cust_email) AGAINST(?)
                || MATCH(cust_tel1) AGAINST(?)
                || MATCH(cust_tel2) AGAINST(?)
                || cust_name LIKE '%" . $this->db->escape_like_str($value) . "%'
                || cust_email LIKE '%" . $this->db->escape_like_str($value) . "%'
                || cust_tel1 LIKE '%" . $this->db->escape_like_str($value) . "%'
                || cust_tel2 LIKE '%" . $this->db->escape_like_str($value) . "%'
                )";

        $run_q = $this->db->query($q, [$value, $value, $value, $value]);

        if ($run_q->num_rows() > 0) {
            return $run_q->result();
        } else {
            return FALSE;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function update($cust_id, $cust_name, $cust_tel1, $cust_tel2, $cust_email, $cust_gender, $cust_adresse)
    {
        $data = ['cust_name' => $cust_name, 'cust_tel1' => $cust_tel1, 'cust_tel2' => $cust_tel2, 'cust_email' => $cust_email, 'cust_gender' => $cust_gender, 'cust_adresse' => $cust_adresse];

        $this->db->where('cust_id', $cust_id);

        $this->db->update('customers', $data);

        return TRUE;
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    function get_all()
    {
        $this->db->order_by('cust_id', 'DESC');
        return $this->db->get('customers')->result();
    }
}
